{"version":3,"sources":["./src/app/components/app.component.ts","./src/app/components/app.component.html","./src/app/guards/login-activate.guard.ts","./src/environments/environment.ts","./src/app/guards/logout-activate.guard.ts","./src/app/app.module.ts","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'final-project';\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginActivateGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate(['login']);\n    }\n\n    return true;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutActivateGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.authService.isLoggedIn()) {\n      this.router.navigate(['charts']);\n    }\n\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './components/app.component';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\n\nimport { IUser } from '../interfaces/IUser';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private users: Array<IUser>;\n\n  constructor() {\n    this.users = [\n      {\n        username: 'test',\n        password: 'test',\n        token: 'ASDFPOK23423P4OKFPGKSG11111111',\n      },\n      {\n        username: 'admin',\n        password: 'password',\n        token: '12312wdfasfasdfasfasdfasdfASDFPOK23423P4OKFPGKSG11111111',\n      },\n      {\n        username: 'root',\n        password: 'root',\n        token:\n          '12312wsdfasdfasdfdfasfasdfasfasdfasdfASDFPOK23423P4OKFPGKSG11111asdasd111',\n      },\n    ];\n  }\n\n  logIn(credentials): void {\n    let findUser: IUser = this.users.find(\n      (user) => user.username === credentials.username\n    );\n\n    if (!!findUser) {\n      if (\n        findUser.username !== credentials.username ||\n        findUser.password !== credentials.password\n      ) {\n        return;\n      }\n      if (\n        findUser.username === credentials.username ||\n        findUser.password === credentials.password\n      ) {\n        localStorage.setItem('token-mock-storage', findUser.token);\n        return;\n      }\n    }\n  }\n\n  logOut() {\n    localStorage.removeItem('token-mock-storage');\n  }\n\n  isLoggedIn(): boolean {\n    const token = localStorage.getItem('token-mock-storage');\n    if (!!token) {\n      let findUser = this.users.find((account) => account.token === token);\n      if (findUser) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginActivateGuard } from './guards/login-activate.guard';\nimport { LogoutActivateGuard } from './guards/logout-activate.guard';\n// import { RootActivateGuard } from './guards/root-activate.guard';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    loadChildren: () =>\n      import('./modules/login.module').then((m) => m.LoginModule),\n    canActivate: [LogoutActivateGuard],\n  },\n  {\n    path: 'charts',\n    loadChildren: () =>\n      import('./modules/charts.module').then((m) => m.ChartsModule),\n    canActivate: [LoginActivateGuard],\n  },\n  {\n    path: 'indicators',\n    loadChildren: () =>\n      import('./modules/indicators.module').then((m) => m.IndicatorsModule),\n    canActivate: [LoginActivateGuard],\n  },\n  // {\n  //   path: '',\n  //   loadChildren: () =>\n  //     import('./modules/indicators.module').then((m) => m.IndicatorsModule),\n  //   canActivate: [RootActivateGuard],\n  // },\n\n  { path: '**', redirectTo: '/login' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
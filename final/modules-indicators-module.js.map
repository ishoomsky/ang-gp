{"version":3,"sources":["./src/app/services/indicators.datasource.ts","./src/app/components/indicators/indicator/indicator.component.ts","./src/app/components/indicators/indicator/indicator.component.html","./src/app/components/indicators/indicators.component.html","./src/app/components/indicators/indicators.component.ts","./src/app/modules/indicators.module.ts"],"names":[],"mappings":"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","file":"modules-indicators-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { IIndicatorData } from '../interfaces/IIndicatorData';\n\n@Injectable()\nexport class IndicatorsDatasource {\n  constructor(private http: HttpClient) {}\n  getIndicatorsData(): any {\n    return <Observable<Array<IIndicatorData>>>(\n      this.http.get('assets/json/indicators.json')\n    );\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport { IIndicatorData } from '../../../interfaces/IIndicatorData';\n\n@Component({\n  selector: 'app-indicator',\n  templateUrl: './indicator.component.html',\n  styleUrls: ['./indicator.component.css'],\n})\nexport class IndicatorComponent {\n  @Input('props')\n  public props: IIndicatorData;\n  @Input('isOpen')\n  public isOpen;\n  @Input('activeParameterId')\n  public activeParameterId;\n\n  @Output('toggleIndicator')\n  public toggleIndicator: EventEmitter<number> = new EventEmitter<number>();\n\n  @Output('activeParameterIdChange')\n  public activeParameterIdOutput: EventEmitter<number> = new EventEmitter<number>();\n\n  setActiveParameterId(id: number): void {\n    if (this.activeParameterId === id) {\n      this.activeParameterIdOutput.emit(null);\n      return;\n    }\n    this.activeParameterIdOutput.emit(id);\n  }\n\n  getDeviation(): number {\n    let deviation: number = 0;\n    this.props.parameters.forEach(({ fact, model }) => {\n      if (fact > model) {\n        deviation++;\n      }\n    });\n    return deviation;\n  }\n}\n","<div class=\"indicator-container\">\n  <div\n    (click)=\"toggleIndicator.emit(props.id)\"\n    class=\"indicator-container__header\"\n  >\n    <div class=\"header__parameter-icon\">\n      <svg\n        [ngClass]=\"{\n          'parameter-icon__svg-element--normal': isOpen === false,\n          'parameter-icon__svg-element--active': isOpen === true\n        }\"\n        width=\"22\"\n        height=\"22\"\n        viewBox=\"0 0 22 22\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M15.9489 15.9497C13.2123 18.6863 8.78586 18.6863 6.04936 15.9497C3.31285 13.2132 3.31285 8.78676 6.04936 6.05025C8.78586 3.31375 13.2123 3.31375 15.9489 6.05025C18.6854 8.78676 18.6854 13.2132 15.9489 15.9497Z\"\n          stroke=\"#606580\"\n          stroke-miterlimit=\"10\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n        <path\n          d=\"M10.9991 7.78975L10.9991 14.2103\"\n          stroke=\"#606580\"\n          stroke-miterlimit=\"10\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n        <path\n          d=\"M7.78882 11L14.2093 11\"\n          stroke=\"#606580\"\n          stroke-miterlimit=\"10\"\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n        />\n      </svg>\n    </div>\n    <div class=\"header__parameter-title\" [class.title--active]=\"isOpen\">\n      {{ props?.name }}\n    </div>\n    <div class=\"header__parameter-deviance\">\n      Отклонений: {{ getDeviation() }}\n    </div>\n  </div>\n  <div *ngIf=\"isOpen\" class=\"indicator-container__content\">\n    <div\n      *ngFor=\"let parameter of props?.parameters\"\n      class=\"content__item\"\n      (click)=\"setActiveParameterId(parameter.id)\"\n    >\n      <div\n        class=\"item__group-name-unit\"\n        [class.group-name-unit--normal]=\"parameter.state === 'normal'\"\n        [class.group-name-unit--danger]=\"parameter.state === 'danger'\"\n        [class.group-name-unit--active]=\"activeParameterId === parameter.id\"\n      >\n        <div\n          class=\"group-name-unit__item_name\"\n          [class.group-name-unit__item_name--normal]=\"\n            parameter.state === 'normal'\n          \"\n          [class.group-name-unit__item_name--good]=\"parameter.state === 'good'\"\n          [class.group-name-unit__item_name--danger]=\"\n            parameter.state === 'danger'\n          \"\n        >\n          {{ parameter?.name }}\n        </div>\n        <div class=\"group-name-unit__item__unit\">\n          {{ parameter?.unit }}\n        </div>\n      </div>\n\n      <div\n        class=\"item__fact\"\n        [class.item__fact--normal]=\"parameter.state === 'normal'\"\n        [class.item__fact--danger]=\"parameter.state === 'danger'\"\n        [class.item__fact--active]=\"activeParameterId === parameter.id\"\n      >\n        {{ parameter?.fact.toLocaleString(\"ru-RU\") }}\n      </div>\n      <div\n        class=\"item__model\"\n        [class.item__model--normal]=\"parameter.state === 'normal'\"\n        [class.item__model--active]=\"activeParameterId === parameter.id\"\n        [class.item__model--danger]=\"parameter.state === 'danger'\"\n      >\n        {{ parameter?.model.toLocaleString(\"ru-RU\") }}\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"page-container\">\n  <app-navbar></app-navbar>\n  <div class=\"indicators-container\">\n    <div class=\"indicators-container__header\">\n      <div class=\"header__icon\">\n        <svg\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M4.5 7.2H13.5C13.7 8.2 14.6 8.9 15.6 8.9C16.6 8.9 17.5 8.2 17.7 7.2H19.4C19.7 7.2 19.9 7 19.9 6.7C19.9 6.4 19.7 6.2 19.4 6.2H17.7C17.5 5.2 16.6 4.5 15.6 4.5C14.6 4.5 13.7 5.2 13.5 6.2H4.5C4.2 6.2 4 6.4 4 6.7C4 7 4.3 7.2 4.5 7.2ZM15.7 5.5C16.4 5.5 16.9 6 16.9 6.7C16.9 7.4 16.4 7.9 15.7 7.9C15 7.9 14.5 7.4 14.5 6.7C14.5 6 15 5.5 15.7 5.5Z\"\n            fill=\"#606580\"\n          />\n          <path\n            d=\"M19.5001 16.8001H15.9001C15.7001 15.8001 14.8001 15.1001 13.8001 15.1001C12.8001 15.1001 11.9001 15.8001 11.7001 16.8001H4.6001C4.3001 16.8001 4.1001 17.0001 4.1001 17.3001C4.1001 17.6001 4.3001 17.8001 4.6001 17.8001H11.7001C11.9001 18.8001 12.8001 19.5001 13.8001 19.5001C14.8001 19.5001 15.7001 18.8001 15.9001 17.8001H19.5001C19.8001 17.8001 20.0001 17.6001 20.0001 17.3001C20.0001 17.0001 19.8001 16.8001 19.5001 16.8001ZM13.8001 18.4001C13.1001 18.4001 12.6001 17.9001 12.6001 17.2001C12.6001 16.5001 13.1001 16.0001 13.8001 16.0001C14.5001 16.0001 15.0001 16.5001 15.0001 17.2001C15.0001 17.9001 14.4001 18.4001 13.8001 18.4001Z\"\n            fill=\"#606580\"\n          />\n          <path\n            d=\"M19.5 11.4998H10.5C10.3 10.4998 9.4 9.7998 8.4 9.7998C7.4 9.7998 6.5 10.4998 6.3 11.4998H4.5C4.2 11.4998 4 11.6998 4 11.9998C4 12.2998 4.2 12.4998 4.5 12.4998H6.3C6.5 13.4998 7.4 14.1998 8.4 14.1998C9.4 14.1998 10.3 13.4998 10.5 12.4998H19.5C19.8 12.4998 20 12.2998 20 11.9998C20 11.6998 19.8 11.4998 19.5 11.4998ZM8.5 13.0998C7.8 13.0998 7.3 12.5998 7.3 11.8998C7.3 11.1998 7.8 10.6998 8.5 10.6998C9.2 10.6998 9.7 11.1998 9.7 11.8998C9.7 12.5998 9.1 13.0998 8.5 13.0998Z\"\n            fill=\"#606580\"\n          />\n        </svg>\n      </div>\n      <div class=\"header__title\">Показатели</div>\n      <div class=\"header__more\">\n        <svg\n          width=\"4\"\n          height=\"14\"\n          viewBox=\"0 0 4 14\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M1.99995 2.8002C2.69995 2.8002 3.29995 2.20019 3.29995 1.50019C3.29995 0.800195 2.69995 0.200195 1.99995 0.200195C1.29995 0.200195 0.699951 0.800195 0.699951 1.50019C0.699951 2.20019 1.29995 2.8002 1.99995 2.8002Z\"\n            fill=\"#606580\"\n          />\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M1.99995 8.3002C2.69995 8.3002 3.29995 7.70019 3.29995 7.00019C3.29995 6.30019 2.69995 5.7002 1.99995 5.7002C1.29995 5.7002 0.699951 6.30019 0.699951 7.00019C0.699951 7.70019 1.29995 8.3002 1.99995 8.3002Z\"\n            fill=\"#606580\"\n          />\n          <path\n            fill-rule=\"evenodd\"\n            clip-rule=\"evenodd\"\n            d=\"M1.99995 13.8002C2.69995 13.8002 3.29995 13.2002 3.29995 12.5002C3.29995 11.8002 2.69995 11.2002 1.99995 11.2002C1.29995 11.2002 0.699951 11.8002 0.699951 12.5002C0.699951 13.2002 1.29995 13.8002 1.99995 13.8002Z\"\n            fill=\"#606580\"\n          />\n        </svg>\n      </div>\n    </div>\n    <div class=\"indicators-container__table-headers\">\n      <div class=\"table-headers__parameter-title\">Параметры</div>\n      <div class=\"table-headers__fact-title\">Факт</div>\n      <div class=\"table-headers__model-title\">Модель</div>\n    </div>\n\n    <div class=\"indicators-container_content-container\">\n      <app-indicator\n        (toggleIndicator)=\"useIndicator($event)\"\n        *ngFor=\"let indicator of indicators\"\n        [props]=\"indicator\"\n        [isOpen]=\"isOpenedIndicator(indicator.id)\"\n        [(activeParameterId)]=\"activeParameterId\"\n      ></app-indicator>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, Input } from '@angular/core';\nimport { IndicatorsDatasource } from '../../services/indicators.datasource';\n\nimport { IIndicatorData } from '../../interfaces/IIndicatorData';\n\n@Component({\n  selector: 'app-indicators',\n  templateUrl: './indicators.component.html',\n  styleUrls: ['./indicators.component.css'],\n})\nexport class IndicatorsComponent implements OnDestroy {\n  private subscription = null;\n  public indicators: Array<IIndicatorData> = null;\n  public openedIndicators: number[] = [];\n\n  private _activeParameterId: number = null;\n\n  //banana box\n  set activeParameterId(id: number) {\n    this._activeParameterId = id;\n  }\n  get activeParameterId(): number {\n    return this._activeParameterId;\n  }\n\n  constructor(private indicatorsDatasource: IndicatorsDatasource) {\n    this.subscription = indicatorsDatasource\n      .getIndicatorsData()\n      .subscribe((data) => {\n        this.indicators = data;\n      });\n  }\n\n  useIndicator(id: number): void {\n    let findId = this.openedIndicators.findIndex((i) => i === id);\n    if (findId !== -1) {\n      this.openedIndicators.splice(findId, 1);\n      return;\n    }\n    this.openedIndicators.push(id);\n  }\n\n  isOpenedIndicator(id: number): boolean {\n    return this.openedIndicators.includes(id);\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { NavbarModule } from './navbar.module';\n\nimport { IndicatorsComponent } from '../components/indicators/indicators.component';\nimport { IndicatorComponent } from '../components/indicators/indicator/indicator.component';\nimport { IndicatorsDatasource } from '../services/indicators.datasource';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IndicatorsComponent,\n  },\n];\n\n@NgModule({\n  declarations: [IndicatorsComponent, IndicatorComponent],\n  imports: [CommonModule, NavbarModule, RouterModule.forChild(routes)],\n  providers: [IndicatorsDatasource],\n})\nexport class IndicatorsModule {}\n"],"sourceRoot":"webpack:///"}